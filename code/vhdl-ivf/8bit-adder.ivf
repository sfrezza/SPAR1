
MX adder.test0{
MP{arg1[7:0] IN;arg2[7:0] IN;carry_in IN;result[7:0] OUT;carry_out OUT;}
MH{
HS{cw[7:0];cx[7:0];}
HA{cw[0:0]<=((carry_in))}
HA{cw[7:1]<=((cx[6:0]))}
HA{cx[7:0]<=((((arg1[7:0] AND arg2[7:0])) OR ((arg1[7:0] AND cw[7:0])) OR ((arg2[7:0] AND cw[7:0]))))}
HA{result[7:0]<=((arg1[7:0] XOR arg2[7:0] XOR cw[7:0]))}
HA{carry_out<=((cx[7:7]))}}}

MF{
FS{arg1_0 arg1_1 arg1_2 arg1_3 arg1_4 arg1_5 arg1_6 arg1_7 arg2_0 arg2_1 arg2_2 arg2_3 arg2_4 arg2_5 arg2_6 arg2_7 carry_in carry_out result_0 result_1 result_2 result_3 result_4 result_5 result_6 result_7 }
FS{_3_0 _3_1 _3_2 _3_3 _3_4 _3_5 _3_6 _3_7 _4_0 _4_1 _4_2 _4_3 _4_4 _4_5 _4_6 _4_7 _5_0 _5_1 _5_2 _5_3 _5_4 _5_5 _5_6 _5_7 cw_0 cw_1 cw_2 cw_3 cw_4 cw_5 cw_6 cw_7 cx_0 cx_1 cx_2 cx_3 cx_4 cx_5 cx_6 cx_7 }
FG NL_GATE.1_0{NL_GATE 0 I 1 carry_in 1 cw_0 }
FG NL_GATE.3_0{NL_GATE 0 I 1 cx_0 1 cw_1 }
FG NL_GATE.3_1{NL_GATE 0 I 1 cx_1 1 cw_2 }
FG NL_GATE.3_2{NL_GATE 0 I 1 cx_2 1 cw_3 }
FG NL_GATE.3_3{NL_GATE 0 I 1 cx_3 1 cw_4 }
FG NL_GATE.3_4{NL_GATE 0 I 1 cx_4 1 cw_5 }
FG NL_GATE.3_5{NL_GATE 0 I 1 cx_5 1 cw_6 }
FG NL_GATE.3_6{NL_GATE 0 I 1 cx_6 1 cw_7 }
FG AND.1_0{AND 0 I 2 arg1_0 arg2_0 1 _3_0 }
FG AND.1_1{AND 0 I 2 arg1_1 arg2_1 1 _3_1 }
FG AND.1_2{AND 0 I 2 arg1_2 arg2_2 1 _3_2 }
FG AND.1_3{AND 0 I 2 arg1_3 arg2_3 1 _3_3 }
FG AND.1_4{AND 0 I 2 arg1_4 arg2_4 1 _3_4 }
FG AND.1_5{AND 0 I 2 arg1_5 arg2_5 1 _3_5 }
FG AND.1_6{AND 0 I 2 arg1_6 arg2_6 1 _3_6 }
FG AND.1_7{AND 0 I 2 arg1_7 arg2_7 1 _3_7 }
FG AND.2_0{AND 0 I 2 arg1_0 cw_0 1 _4_0 }
FG AND.2_1{AND 0 I 2 arg1_1 cw_1 1 _4_1 }
FG AND.2_2{AND 0 I 2 arg1_2 cw_2 1 _4_2 }
FG AND.2_3{AND 0 I 2 arg1_3 cw_3 1 _4_3 }
FG AND.2_4{AND 0 I 2 arg1_4 cw_4 1 _4_4 }
FG AND.2_5{AND 0 I 2 arg1_5 cw_5 1 _4_5 }
FG AND.2_6{AND 0 I 2 arg1_6 cw_6 1 _4_6 }
FG AND.2_7{AND 0 I 2 arg1_7 cw_7 1 _4_7 }
FG AND.3_0{AND 0 I 2 arg2_0 cw_0 1 _5_0 }
FG AND.3_1{AND 0 I 2 arg2_1 cw_1 1 _5_1 }
FG AND.3_2{AND 0 I 2 arg2_2 cw_2 1 _5_2 }
FG AND.3_3{AND 0 I 2 arg2_3 cw_3 1 _5_3 }
FG AND.3_4{AND 0 I 2 arg2_4 cw_4 1 _5_4 }
FG AND.3_5{AND 0 I 2 arg2_5 cw_5 1 _5_5 }
FG AND.3_6{AND 0 I 2 arg2_6 cw_6 1 _5_6 }
FG AND.3_7{AND 0 I 2 arg2_7 cw_7 1 _5_7 }
FG OR.1_0{OR 0 I 3 _3_0 _4_0 _5_0 1 cx_0 }
FG OR.1_1{OR 0 I 3 _3_1 _4_1 _5_1 1 cx_1 }
FG OR.1_2{OR 0 I 3 _3_2 _4_2 _5_2 1 cx_2 }
FG OR.1_3{OR 0 I 3 _3_3 _4_3 _5_3 1 cx_3 }
FG OR.1_4{OR 0 I 3 _3_4 _4_4 _5_4 1 cx_4 }
FG OR.1_5{OR 0 I 3 _3_5 _4_5 _5_5 1 cx_5 }
FG OR.1_6{OR 0 I 3 _3_6 _4_6 _5_6 1 cx_6 }
FG OR.1_7{OR 0 I 3 _3_7 _4_7 _5_7 1 cx_7 }
FG XOR.1_0{XOR 0 I 3 arg1_0 arg2_0 cw_0 1 result_0 }
FG XOR.1_1{XOR 0 I 3 arg1_1 arg2_1 cw_1 1 result_1 }
FG XOR.1_2{XOR 0 I 3 arg1_2 arg2_2 cw_2 1 result_2 }
FG XOR.1_3{XOR 0 I 3 arg1_3 arg2_3 cw_3 1 result_3 }
FG XOR.1_4{XOR 0 I 3 arg1_4 arg2_4 cw_4 1 result_4 }
FG XOR.1_5{XOR 0 I 3 arg1_5 arg2_5 cw_5 1 result_5 }
FG XOR.1_6{XOR 0 I 3 arg1_6 arg2_6 cw_6 1 result_6 }
FG XOR.1_7{XOR 0 I 3 arg1_7 arg2_7 cw_7 1 result_7 }
FG NL_GATE.9{NL_GATE 0 I 1 cx_7 1 carry_out }}
